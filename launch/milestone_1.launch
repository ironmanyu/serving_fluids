<launch>

  <!-- Set Gazebo Model Path-->
  <env name="GAZEBO_MODEL_PATH" value="$(find Serving_fluids)/models:$(optenv GAZEBO_MODEL_PATH)" />

  <arg name="robot" default="fetch"/>
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <!-- <arg name="world" default="worlds/empty.world"/>  -->
  <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable (/opt/share/gazebo-9/) -->
  <!-- Note2: to include fetchit_challenge worlds change default to: "$(find fetchit_challenge)/worlds/fetchit_challenge_simple.world" --> 
  <!-- Note3: to change world from the terminal substitute $(find ...) for $HOME/catkin_ws/src/... -->
  <arg name="world" default="$(find Serving_fluids)/models/test_floorplan.world"/>

  <!-- Start Gazebo with a blank world --> <!-- not really blank, we set the world file through an argument -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="world_name" value="$(arg world)"/>
  </include>


  <!-- Oh, you wanted a robot? -->
  <include file="$(find Serving_fluids)/launch/include/fetch_gazebo.launch">
    <arg name="x" value="-4.0" />
    <arg name="y" value="1.0" />
    <arg name="z" value="0.0" />
    <arg name="yaw" value="1.57" />
  </include>

  <!-- Spawn a can on the tabletop --> <!-- Must be after ROS is started -->
  <node name="spawn_coke_can" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-sdf -database coke_can -model coke_can -x -4.2 -y 2.85 -z 0.75 -R 0.0 -P 0.0 -Y 0.0" />

    <!-- Start MoveIt -->
  <include file="$(find fetch_moveit_config)/launch/move_group.launch" >
    <arg name="info" value="true"/><!-- publish grasp markers -->
    <arg name="allow_active_sensing" value="false"/><!-- Octomap --><!-- Keep Octomap off for now -->
  </include>

  <!-- Start RViz -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find Serving_fluids)/config/milestone_1.rviz" />

  <!-- Start the demo -->
  <node name="milestone_1_demo" pkg="Serving_fluids" type="milestone_1.py" respawn="false" output="screen" />

</launch>
